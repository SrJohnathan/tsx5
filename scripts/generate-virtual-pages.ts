/*
// scripts/generate-virtual-pages.ts
import fs from 'fs';
import path from 'path';
import { glob } from 'fast-glob';

function parseRoutePathServer(filePath: string): string {
    const normalizedPath = filePath.replace(/\\/g, '/');
    const pagesIndex = normalizedPath.indexOf('/pages/');
    let routePath = pagesIndex !== -1
        ? normalizedPath.substring(pagesIndex + '/pages/'.length)
        : normalizedPath;

    routePath = routePath.replace(/\.tsx$/, '');
    routePath = routePath.replace(/\/index$/, '');

    if (!routePath || routePath === "/") {
        return "/";
    }

    const segments = routePath.split('/').filter(Boolean);
    const convertedSegments = segments.map(segment => {
        if (segment.startsWith('[') && segment.endsWith(']')) {
            return ':' + segment.slice(1, -1);
        }
        return segment;
    });

    return '/' + convertedSegments.join('/').toLowerCase();
}

function extractParamsFromPath(path: string): string[] {
    const paramRegex = /:([a-zA-Z0-9_]+)/g;
    const params: string[] = [];
    let match;
    while ((match = paramRegex.exec(path)) !== null) {
        params.push(match[1]);
    }
    return params;
}

async function generateVirtualPages() {
    const pagesDir = path.resolve(process.cwd(), 'src/pages');
    const outputFile = path.resolve(process.cwd(), 'src/__virtual_pages.ts');

    const files = await glob('**!/!*.tsx', { cwd: pagesDir });

    const imports: string[] = [];
    const routes: string[] = [];

    for (const file of files) {
        const name = path.basename(file, path.extname(file));
        const variable = name.replace(/[^a-zA-Z0-9_$]/g, '_');
        const importPath = `./pages/${file.replace(/\\/g, '/')}`;

        imports.push(`import ${variable} from '${importPath}';`);
        const routePath = parseRoutePathServer(importPath);
        const params = extractParamsFromPath(routePath);
        routes.push(`  { path: '${routePath}', component: ${variable}, params: ${JSON.stringify(params)} }`);
    }

    const content = `// Auto-generated by generate-virtual-pages.ts
${imports.join('\n')}

export const routes = [
${routes.join(',\n')}
];
`;

    fs.writeFileSync(outputFile, content);
    console.log(`✅ __virtual_pages.ts gerado com ${files.length} páginas.`);
}

generateVirtualPages();
*/
